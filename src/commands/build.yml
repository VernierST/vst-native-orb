description: >
  Build conan packages.

parameters:
  profile:
    type: string
    default: "none"
  type:
    type: string
    default: "Release"
  build_missing:
    type: boolean
    default: false
  build_emscripten_threaded:
    type: boolean
    default: true
  build_emscripten_threadless:
    type: boolean
    default: true

steps:
  - run:
      name: Build << parameters.profile >>  << parameters.type >>
      command: |
        set -e
        deps=${CIRCLE_BRANCH##*@}
        if [ "$deps" = "${CIRCLE_BRANCH}" ]; then
          deps=""
          channel=${CIRCLE_BRANCH//[_+=.,\/]/-}
        else
          channel=${CIRCLE_BRANCH%@*}
          channel=${channel//[_+=.,\/]/-}
        fi
        # treat release and beta branches like main
        if echo $CIRCLE_BRANCH | grep '^beta/.\+\|^release/.\+'; then
          channel=main
        fi
        missing=""
        if << parameters.build_missing >> ; then
          missing="--build missing"
        fi

        threads=""
        if [ "<< parameters.profile >>" = "emscripten" ]; then
          threads="-s os.threads=False"
        fi

        if [ "<< parameters.profile >>" != "emscripten" ] || << parameters.build_emscripten_threadless >>; then
          echo "Building for << parameters.profile >> on ${channel} for << parameters.type >>; pr_deps ${deps}; ${missing}"
          conan create -pr << parameters.profile >> -s "build_type=<< parameters.type >>" ${missing} conan "vernierst+vst-libs/${channel}" -o "pr_deps=${deps}" ${threads}
        fi

        if [ "<< parameters.profile >>" = "emscripten" ] && << parameters.build_emscripten_threaded >>; then
          threads="-s os.threads=True"
          echo "Building for << parameters.profile >> with threads on ${channel} for << parameters.type >>; pr_deps ${deps}; ${missing}"
          conan create -pr << parameters.profile >> -s "build_type=<< parameters.type >>" ${missing} conan "vernierst+vst-libs/${channel}" -o "pr_deps=${deps}" ${threads}
        fi
